<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<div class="row">
    <div class="col-lg-12">
        <div class="main-card mb-3 card">
            <div class="card-header-tab card-header">
                <div class="card-header-title font-size-lg text-capitalize font-weight-normal"><i class="header-icon lnr-laptop-phone mr-3 text-muted opacity-6"> </i><#= ViewDataTypeShortName #></div>
                <div class="btn-actions-pane-right actions-icon-btn">
                    @Html.ActionLink("Create New", "Create", null, new { @class = "btn-shadow btn btn-info" })
                </div>
            </div>
            <div class="card-body">
                @{
                    string cls = "";
                    string ids = "";
                }

                @if (@Model.ToList().Count > 7)
                {
                    cls = "table table-hover table-striped table-bordered";
                    ids = "example";
                }
                else
                {
                    cls = "table table-bordered";
                    ids = "";
                }
                <table style="width: 100%;" id="@ids" class="@cls">
                    <thead>
                        <tr>
                            <th>#</th>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
    #>
                            <th>
                                @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
                            </th>
<#
    }
}
#>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int rowNumber = 1;
                        }
                        @foreach (var item in Model) 
                        {
                            <tr>
                                <th scope="row">@rowNumber</th>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>

                                <td>
                                    @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
                                </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
                                <td>
                                    @Html.ActionLink("  Edit ", "Edit", new { id = item.<#= pkName #> }, new { @class = "mb-2 mr-2 btn btn-sm btn-outline-info" })
                                    @Html.ActionLink("Details", "Details", new { id = item.<#= pkName #>  }, new { @class = "mb-2 mr-2 btn btn-sm btn-outline-success" })
                                    @Html.ActionLink("Delete ", "Delete", new { id = item.<#= pkName #>  }, new { @class = "mb-2 mr-2 btn btn-sm btn-outline-danger" })
                                </td>
<#
} else {
#>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                                </td>
<#
}
#>
                            </tr>
                            rowNumber++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>